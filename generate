#!/usr/bin/env node

const fs = require('fs')

const w = 40
const h = 20
const density = 0.04

const prefix = '<h2><samp>'
const suffix = '</samp></h2>'

const gradientSteps = 3
const gradientStepSize = h / gradientSteps
const gradientWidthIncrease = 1.35

// const name = "Lucas Bebber"
const name = ""

const namePos = [
  0,
  5,
]

const stars = '⟡⋄.·+*..⋆✧ ·✦✦˚·..⠁⠂⠐⠠⡀⢀⠁⠂⠐⠠⡀⢀*·.✺·*⊹⊹⊹.'.split('').concat([
  // '✨',
])

const moon=[
  '🌙',
]

const escapeChar = input => {
  // if (input === '*') {
  //   return '\\*'
  // }
  return input
}
const lines = []

const getRandom = source => escapeChar(source[Math.round(Math.random()*(source.length-1))])

let starNum = 0
const getUrl = () => `https://github.com/lbebber/lbebber/issues/new?labels=bug&title=Star+${starNum}&body=eita`

const getStar = () => {
  starNum++
  // return `[${getRandom(stars)}](${getUrl()})`
  return getRandom(stars)
  // return `[${getRandom(stars)}](#)`
}
const getMoon = () => getRandom(moon)
const moonPos = [
  Math.round(Math.random()*w),
  Math.round(Math.random()*h),
]

let subLevel = 0
for (let y = 0; y < h; y++) {
  let line = ''
  if (y>0 && y%gradientStepSize === 0) {
    line = line.concat('<sub>')
    subLevel += 1
  }
  for (let x = 0; x < w*Math.pow(gradientWidthIncrease,subLevel); x++) {
    if (namePos[1]===y && x >= namePos[0] && x<namePos[0]+name.length) {
      if (x === namePos[0]) {
        line = line.concat(name)
      }
      continue
    }
    if (moonPos[0]===x && moonPos[1]===y) {
      line = line.concat(getMoon())
      continue
    }
    line = line.concat(Math.random() < density ? getStar() : '&nbsp;')
  }
  lines.push(line)
}

let output = ''

for (let line of lines) {
  output = output.concat(line).concat('<br/>')
}

const gradientEnd = Array.from({ length: gradientSteps }).map(_ => '</sub>').join('')
output = prefix + output + gradientEnd + suffix

fs.writeFileSync('README.md', output)

console.log(output.replace(/&nbsp;/g, ' ').replace(/<br\/>/g, '\n'))
