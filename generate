#!/usr/bin/env node

const fs = require('fs')

const w = 100
const h = 25
const density = 0.04

const prefix = '<samp>'
const suffix = '</samp>'

const gradientSteps = 5
const gradientStepSize = h / gradientSteps
// const gradientWidthIncrease = 1.1
const gradientWidthIncrease = 10

const stars = '⟡⋄.·+*..⋆✧ ·˚·..⠁⠂⠐⠠⡀⢀⠁⠂⠐⠠⡀⢀*·.✺·*⊹⊹⊹.'.split('').concat([
  '✨',
])

const moon=[
  '🌙',
]

const escapeChar = input => {
  if (input === '*') {
    return '\\*'
  }
  return input
}
const lines = []

const getRandom = source => escapeChar(source[Math.round(Math.random()*(source.length-1))])

const getStar = () => getRandom(stars)
const getMoon = () => getRandom(moon)
const moonPos = [
  Math.round(Math.random()*w),
  Math.round(Math.random()*h),
]

let subLevel = 0
for (let y = 0; y < h; y++) {
  let line = ''
  if (y>0 && y%gradientStepSize === 0) {
    line = line.concat('<sub>')
    subLevel += 1
  }
  for (let x = 0; x < w+(gradientWidthIncrease*subLevel); x++) {
    if (moonPos[0]===x && moonPos[1]===y) {
      line = line.concat(getMoon())
      continue
    }
    line = line.concat(Math.random() < density ? getStar() : '&nbsp;')
  }
  lines.push(line)
}

let output = ''

for (let line of lines) {
  output = output.concat(line).concat('<br/>')
}

const gradientEnd = Array.from({ length: gradientSteps }).map(_ => '</sub>').join('')
output = prefix + output + gradientEnd + suffix

fs.writeFileSync('README.md', output)

console.log(output.replace(/&nbsp;/g, ' ').replace(/<br\/>/g, '\n'))
